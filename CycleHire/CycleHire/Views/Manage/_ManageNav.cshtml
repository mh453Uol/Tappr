@using CycleHire.Views.Manage
@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<div class="ui vertical menu">
    <div class="ui container">
        <a class="item @ManageNavPages.IndexNavClass(ViewContext)" asp-action="Index">Profile</a>
        <a class="item @ManageNavPages.ChangePasswordNavClass(ViewContext)" asp-action="ChangePassword">Password</a>
        @if (User.IsInRole("Host"))
        {
            <a class="item @ManageNavPages.PaymentPlatformsNavClass(ViewContext)" asp-action="Payment">Payments</a>
        }
        @*@if (hasExternalLogins)
            {
                <a class="item @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-action="ExternalLogins">External logins</a>
            }
            <a class="item @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" asp-action="TwoFactorAuthentication">Two-factor authentication</a>*@
    </div>
</div>

